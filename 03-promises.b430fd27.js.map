{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OADAC,QAAQC,IAAIJ,GACL,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLR,EACFM,EAAQ,CAAER,WAAUC,UAEpBQ,EAAO,CAAET,WAAUC,S,GAEpBA,E,IAZMU,SAASC,cAAc,SAuC/BC,iBAAiB,UAvBtB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOH,EAAMI,OAAOjB,MAAMkB,OACrCC,EAAYH,OAAOH,EAAMI,OAAOG,KAAKF,OACrCG,EAAcL,OAAOH,EAAMI,OAAOK,OAAOJ,OAC/Cd,QAAQC,IAAIU,EAAYI,EAAWE,GAEnC,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EACpCzB,EAAcyB,EAAI,EAAGR,GAClBS,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjDe,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(shouldResolve);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(event.target.delay.value);\n  const stepValue = Number(event.target.step.value);\n  const amountValue = Number(event.target.amount.value);\n  console.log(delayValue, stepValue, amountValue);\n\n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(i + 1, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n\nform.addEventListener('submit', onSubmit);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayValue","Number","target","value","stepValue","step","amountValue","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.b430fd27.js.map"}